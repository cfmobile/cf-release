meta:
  environment: ~
  default_quota_definitions:
    default:
       memory_limit: 10240
       total_services: 100
       non_basic_services_allowed: true
       total_routes: 1000
       trial_db_allowed: true

properties:
  domain: (( merge ))

  loggregator_endpoint:
    shared_secret: (( merge ))
  cc:
    jobs:
      global:
        timeout_in_seconds: 14400 # 4 hours
      app_bits_packer:
        timeout_in_seconds: ~
      app_events_cleanup:
        timeout_in_seconds: ~
      app_usage_events_cleanup:
        timeout_in_seconds: ~
      blobstore_delete:
        timeout_in_seconds: ~
      blobstore_upload:
        timeout_in_seconds: ~
      droplet_deletion:
        timeout_in_seconds: ~
      droplet_upload:
        timeout_in_seconds: ~
      model_deletion:
        timeout_in_seconds: ~

    app_events:
      cutoff_age_in_days: 31
    app_usage_events:
      cutoff_age_in_days: 31
    audit_events:
      cutoff_age_in_days: 31

    process_group: cloud_controller

    hm9000_noop: false
    default_app_memory: 1024

    srv_api_uri: (( "https://api." domain ))

    bulk_api_password: (( merge ))

    staging_upload_user: (( merge ))
    staging_upload_password: (( merge ))

    db_encryption_key: (( merge ))

    tasks_disabled: false

    disable_custom_buildpacks: false

    broker_client_timeout_seconds: 60

    resource_pool:
      resource_directory_key: (( domain "-cc-resources" ))
      fog_connection: ~
      cdn: ~

    packages:
      app_package_directory_key: (( domain "-cc-packages" ))
      fog_connection: ~
      cdn: ~

    droplets:
      droplet_directory_key: (( domain "-cc-droplets" ))
      fog_connection: ~
      cdn: ~

    development_mode: false

    newrelic:
      license_key: ~
      environment_name: (( meta.environment ))
      developer_mode: (( cc.development_mode ))
      monitor_mode: (( merge || false ))
      capture_params: (( merge || false ))
      transaction_tracer:
        enabled: (( merge || true ))
        record_sql: (( merge || "obfuscated" ))

    buildpacks:
      buildpack_directory_key: (( domain "-cc-buildpacks" ))
      fog_connection: ~
      cdn: ~
    quota_definitions: (( merge || meta.default_quota_definitions ))
    default_quota_definition: default

  login:
    catalina_opts: (( merge ))
    uaa_certificate: ~
    protocol: https

    links:
      home: (( "https://console." domain ))
      passwd: (( "https://console." domain "/password_resets/new" ))
      signup: (( "https://console." domain "/register" ))

  saml_login: 
    #standard login server configuration
    catalina_opts: (( merge ))
    uaa_certificate: ~
    protocol: https

    links:
      home: (( "https://console." domain ))
      passwd: (( "https://console." domain "/password_resets/new" ))
      signup: (( "https://console." domain "/register" ))

    #saml authentication information
    entityid: cloudfoundry-saml-login-server
    idpEntityAlias: vsphere-local
    idpMetadataURL: "https://win2012-sso2:7444/websso/SAML2/Metadata/vsphere.local"  
    serviceProviderKeyPassword: password
    serviceProviderKey: | 
      -----BEGIN RSA PRIVATE KEY-----
      Proc-Type: 4,ENCRYPTED
      DEK-Info: DES-EDE3-CBC,231BD428AF94D4C8
      0Nmo90pX8byVS7ZlakMIoXdJSLlxqzi1pN0g1ye2U+9HgTLTLuMwWaPknZ/2NFtK
      rO72ss8uc7xBAoMkOvcMTZCg5P4JDlmuQ31IabzRyOQcAxCPZedgarRnwxT6GUim
      JtkzNPmAAgf1bfUTu/LNt2o01dW+qq+2qiwUxgUBM2xLBmadIWqqTOZbkFc9Xjvl
      /IEnJgp/c49sNh68EpXPlsGJfW7jAh90nlA13H1fpvTsSg2/6wKbRsxxNkpVg0Nq
      bQURQIO6htOLZBPMMpoPILp/KtKkd1zpaZJnbZGDo9AdwfAh9dUbEw8ukJwRg3Xl
      lsptHoMGsGdvgViWZhCB/pAHYLh31G8oVMA/qPB9PNJYIK2aQZdm7yiAdf+m8Jxb
      Do2xBH6XUeHkg2F0LWnC/FjaMRpLuliI9vvJVB7YCQKkMdgNVV0SCx39IiX0rEm5
      8vuuoAH3b7b+maWp5+ffriNIcEFSlcmTPIgqZBboIORBNXZnHTUG7nGIML+nlOK9
      zdvF2vAxchqOKroc6+SGFLNvNQd9S/nLH3vP+aX9iStL55G11+p2tL+bIGMWZj0h
      Z+qqQoogtngRFbjcVoKYerFXbKG6xXzXUc4O3EbvAKvEi0HJodYccP3L7wIer1aY
      VaMF2M05g5KedHosEfvvhU17xS9L4u2SRMZIQ3K8iLNEhZ6bOw6EnzTaKWeffrYr
      UOjfMEgswcHfpxx1iD5T4RTwxuKOgtFhd1QM4enXPsU6uRU5PGSiB/0t6jal6ClF
      PhtIrTwhx0vBR4rySx4raXdLClxxt5vLe826C3uwo/6HTdUsnDvIXA==
      -----END RSA PRIVATE KEY-----
    serviceProviderKeyPassword: password
    serviceProviderCertificate: | 
      -----BEGIN CERTIFICATE-----
      MIIBzzCCATgCCQDTMCX3wJYrVDANBgkqhkiG9w0BAQUFADAsMSowKAYDVQQDFCFz
      YW1sX2xvZ2luLE9VPXRlc3QsTz12bXdhcmUsTz1jb20wHhcNMTMwNzAyMjMzOTU4
      WhcNMTQwNzAyMjMzOTU4WjAsMSowKAYDVQQDFCFzYW1sX2xvZ2luLE9VPXRlc3Qs
      Tz12bXdhcmUsTz1jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANYBRuep
      WaoNA7/RsOUVlmOzxbhtfW8AstGXjsWbAmmg8NSruRlNuMz1WdCeESM3zBqLSyp8
      Vf3j3ExzB2qquDbPXNA1k4EqgNya2E+6n3KsgVLCWQm4W46Pd7C6QswrR6JgUKaW
      6KI8BgyJQ9wjL/nR8uqZouJJyRSLuIaGXIuXAgMBAAEwDQYJKoZIhvcNAQEFBQAD
      gYEAXOojarkGv5nVZqTuY8BRM/TRt1oby3i0VRG70l0PcDlWft52aSvCd3t8ds2S
      h92cXLz8nvHEBaBTkxTLtf2/h5x2KQhXyHoU1UU+JjOegoF+LD6KdmaVk2l35Na5
      1V2AHsj+yDrJ9aKwt86jbBbcFkRphdkn5ivq71GCWRfcpZE=
      -----END CERTIFICATE-----
    nameidFormat: "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"

    #if you wish to use ldap - enable spring_profiles: ldap (also remember to set uaa.login.addnew property)
    spring_profiles: ldap
    ldap:
      profile_type: simple-bind # options are simple-bind, search-and-bind, search-and-compare
      url: "ldap://192.168.3.39:10389/" #required
      userDNPattern: 'cn={0},ou=Users,dc=test,dc=com;cn={0},ou=OtherUsers,dc=example,dc=com' # required for simple-bind
      userDN: cn=admin,ou=Users,dc=test,dc=com # required for search-and-bind and search-and-compare
      userPassword: password # required for search-and-bind and search-and-compare
      searchFilter: cn={0} # required for search-and-bind and search-and-compare
      passwordAttributeName: userPassword # required for search-and-compare
      passwordEncoder: org.cloudfoundry.identity.uaa.login.ldap.DynamicPasswordComparator # required for search-and-compare
      localPasswordCompare: true # required for search-and-compare
      sslCertificate: |
        -----BEGIN CERTIFICATE-----
        MIIBfTCCAScCBgFDfaC2yzANBgkqhkiG9w0BAQUFADBCMQswCQYDVQQGEwJVUzEMMAoGA1UEChMD
        QVNGMRIwEAYDVQQLEwlEaXJlY3RvcnkxETAPBgNVBAMTCEFwYWNoZURTMB4XDTE0MDExMDE5Mjg0
        MVoXDTE1MDExMDE5Mjg0MVowTDELMAkGA1UEBhMCVVMxDDAKBgNVBAoTA0FTRjESMBAGA1UECxMJ
        RGlyZWN0b3J5MRswGQYDVQQDExJmaGFuaWstd29ya3N0YXRpb24wXDANBgkqhkiG9w0BAQEFAANL
        ADBIAkEAuA6Nmto6NFCCJ+CwsBnT2cvMxuYgf26iZ3ckIpLhs2V4ZJ4PFinR6JZUsVnRp0RbYoV5
        iW6F91XDTVtAMtDTJwIDAQABMA0GCSqGSIb3DQEBBQUAA0EATFGpEIprKYcnc+JuNcSQ8v2P2J7e
        lQ23NhTaljASF0g8AZ7SZEItU8JFYqf/KnNJ7FPwo4LbMbr7Zg6BRKBvnQ==
        -----END CERTIFICATE-----
      sslCertificateAlias: ldaps 
  uaa:
    catalina_opts: (( merge ))

    url: (( "https://uaa." domain ))

    no_ssl: false

    login:
      addnew: true

    scim:
      users: (( merge ))

    jwt:
      signing_key: (( merge ))
      verification_key: (( merge ))

    cc:
      client_secret: (( merge ))

    admin:
      client_secret: (( merge ))

    batch:
      username: (( merge ))
      password: (( merge ))

    clients:
      login:
        override: true
        scope: openid,oauth.approvals
        authorities: oauth.login
        secret: (( merge ))
        authorized-grant-types: authorization_code,client_credentials,refresh_token
        redirect-uri: (( "https://login." domain ))
      developer_console:
        override: true
        scope: openid,cloud_controller.read,cloud_controller.write,password.write,console.admin,console.support
        authorities: scim.write,scim.read,cloud_controller.read,cloud_controller.write,password.write,uaa.admin,uaa.resource,cloud_controller.admin,billing.admin
        secret: (( merge ))
        authorized-grant-types: authorization_code,client_credentials
        access-token-validity: 1209600
        refresh-token-validity: 1209600
        redirect-uri: (( "https://console." domain "/oauth/callback" ))
      app-direct:
        override: true
        authorities: app_direct_invoice.write
        secret: (( merge ))
        authorized-grant-types: authorization_code,client_credentials,password,refresh_token,implicit
        access-token-validity: 1209600
        refresh-token-validity: 1209600
        redirect-uri: (( properties.login.links.home ))
      support-services:
        scope: scim.write,scim.read,openid,cloud_controller.read,cloud_controller.write
        secret: (( merge ))
        authorized-grant-types: authorization_code,client_credentials
        redirect-uri: (( "http://support-signon." domain ))
        authorities: portal.users.read
        access-token-validity: 1209600
        refresh-token-validity: 1209600
      servicesmgmt:
        secret: (( merge ))
        scope: openid,cloud_controller.read,cloud_controller.write
        authorities: uaa.resource,oauth.service,clients.read,clients.write,clients.secret
        authorized-grant-types: authorization_code,client_credentials,password,implicit
        redirect-uri: (( "http://servicesmgmt." domain "/auth/cloudfoundry/callback" ))
        override: true
        autoapprove: true
      space-mail:
        override: true
        authorities: scim.read,scim.write,cloud_controller.admin
        secret: (( merge ))
        authorized-grant-types: client_credentials
        access-token-validity: 1209600
        refresh-token-validity: 1209600
